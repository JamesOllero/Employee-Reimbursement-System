{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-router.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/main-menu/main-menu.component.css","webpack:///./src/app/main-menu/main-menu.component.html","webpack:///./src/app/main-menu/main-menu.component.ts","webpack:///./src/app/navigation/navigation.component.css","webpack:///./src/app/navigation/navigation.component.html","webpack:///./src/app/navigation/navigation.component.ts","webpack:///./src/app/services/auth-guard-service.service.ts","webpack:///./src/app/services/auth-service.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from \"@angular/router\";\r\nimport { LoginComponent} from \"./login/login.component\";\r\nimport { AuthGuardServiceService } from \"./services/auth-guard-service.service\";\r\nimport {MainMenuComponent} from \"./main-menu/main-menu.component\";\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: MainMenuComponent,\r\n    canActivate: [AuthGuardServiceService]\r\n  },\r\n  {\r\n    path: 'login',\r\n    component: LoginComponent\r\n  },\r\n  {\r\n    path: '**',\r\n    redirectTo: ''\r\n  }\r\n]\r\n\r\n@NgModule({\r\n  declarations: [],\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRouterModule { }\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<router-outlet></router-outlet>\\r\\n\"","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'ers-client';\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { HttpClientModule } from \"@angular/common/http\";\r\nimport { AppComponent } from './app.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { AppRouterModule } from './app-router.module';\r\nimport { FormsModule } from \"@angular/forms\";\r\nimport { MainMenuComponent } from './main-menu/main-menu.component';\r\nimport { NavigationComponent } from './navigation/navigation.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    LoginComponent,\r\n    MainMenuComponent,\r\n    NavigationComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRouterModule,\r\n    HttpClientModule,\r\n    FormsModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","module.exports = \".form-container {\\r\\n  margin: 0 auto;\\r\\n  width: 100%;\\r\\n  text-align: center;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbG9naW4vbG9naW4uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGNBQWM7RUFDZCxXQUFXO0VBQ1gsa0JBQWtCO0FBQ3BCIiwiZmlsZSI6InNyYy9hcHAvbG9naW4vbG9naW4uY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5mb3JtLWNvbnRhaW5lciB7XHJcbiAgbWFyZ2luOiAwIGF1dG87XHJcbiAgd2lkdGg6IDEwMCU7XHJcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG59XHJcbiJdfQ== */\"","module.exports = \"<div class=\\\"form-container\\\">\\r\\n  <form #loginForm=\\\"ngForm\\\" novalidate (ngSubmit)=\\\"loginSubmit()\\\">\\r\\n    <div>\\r\\n      <input\\r\\n        type=\\\"text\\\"\\r\\n        name=\\\"username\\\"\\r\\n        placeholder=\\\"email\\\"\\r\\n        [(ngModel)]=\\\"username\\\"\\r\\n        required/>\\r\\n    </div>\\r\\n    <div>\\r\\n      <input\\r\\n        type=\\\"password\\\"\\r\\n        name=\\\"password\\\"\\r\\n        placeholder=\\\"password\\\"\\r\\n        [(ngModel)]=\\\"password\\\"\\r\\n        required/>\\r\\n    </div>\\r\\n    <div>\\r\\n      <button type=\\\"submit\\\" [disabled]=\\\"!loginForm.valid\\\">Login</button>\\r\\n    </div>\\r\\n  </form>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { AuthServiceService} from \"../services/auth-service.service\";\r\nimport { Router, ActivatedRoute} from \"@angular/router\";\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  username: string;\r\n  password: string;\r\n  returnUrl: string;\r\n\r\n  constructor(\r\n    private authService: AuthServiceService,\r\n    private router: Router,\r\n    private route: ActivatedRoute\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.returnUrl = this.route.snapshot.queryParams['returnUrl'] || '/';\r\n  }\r\n\r\n  loginSubmit() {\r\n    this.authService.authenticate(this.username, this.password,\r\n      () => this.router.navigate([this.returnUrl]),\r\n      (err) => {\r\n      console.log(err);\r\n      });\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21haW4tbWVudS9tYWluLW1lbnUuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<app-navigation [navItems]=\\\"userNavs\\\"></app-navigation>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { AuthServiceService} from \"../services/auth-service.service\";\r\nimport { environment } from \"../../environments/environment\";\r\n\r\n@Component({\r\n  selector: 'app-main-menu',\r\n  templateUrl: './main-menu.component.html',\r\n  styleUrls: ['./main-menu.component.css']\r\n})\r\nexport class MainMenuComponent implements OnInit {\r\n  userNavs: Array<{title: string}>;\r\n\r\n  constructor(private authService: AuthServiceService) { }\r\n\r\n  ngOnInit() {\r\n    if(this.authService.hasRoles(['Manager'])) {\r\n      this.userNavs = environment.managerNav;\r\n    } else {\r\n      this.userNavs = environment.employeeNav;\r\n    }\r\n  }\r\n\r\n}\r\n","module.exports = \"ul {\\r\\n  list-style: none;\\r\\n  border-bottom: 1px solid #bbbb;\\r\\n  margin: 0;\\r\\n  padding: 0;\\r\\n}\\r\\n\\r\\nli {\\r\\n  display: inline-block;\\r\\n  margin-right: 20px;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbmF2aWdhdGlvbi9uYXZpZ2F0aW9uLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxnQkFBZ0I7RUFDaEIsOEJBQThCO0VBQzlCLFNBQVM7RUFDVCxVQUFVO0FBQ1o7O0FBRUE7RUFDRSxxQkFBcUI7RUFDckIsa0JBQWtCO0FBQ3BCIiwiZmlsZSI6InNyYy9hcHAvbmF2aWdhdGlvbi9uYXZpZ2F0aW9uLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJ1bCB7XHJcbiAgbGlzdC1zdHlsZTogbm9uZTtcclxuICBib3JkZXItYm90dG9tOiAxcHggc29saWQgI2JiYmI7XHJcbiAgbWFyZ2luOiAwO1xyXG4gIHBhZGRpbmc6IDA7XHJcbn1cclxuXHJcbmxpIHtcclxuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgbWFyZ2luLXJpZ2h0OiAyMHB4O1xyXG59XHJcbiJdfQ== */\"","module.exports = \"<nav>\\r\\n  <ul>\\r\\n    <li *ngFor=\\\"let item of navItems\\\">{{item.title}}</li>\\r\\n  </ul>\\r\\n</nav>\\r\\n\"","import { Component, OnInit, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-navigation',\r\n  templateUrl: './navigation.component.html',\r\n  styleUrls: ['./navigation.component.css']\r\n})\r\nexport class NavigationComponent implements OnInit {\r\n  @Input() navItems: Array<{title: string}>;\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {CanActivate,ActivatedRouteSnapshot,Router,RouterStateSnapshot} from \"@angular/router\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthGuardServiceService implements CanActivate{\r\n\r\n  constructor(private router: Router) { }\r\n\r\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\r\n    if(localStorage.getItem('authToken')) {\r\n      return true;\r\n    }\r\n    this.router.navigate(['/login'], {queryParams: {returnUrl: state.url}});\r\n    return false;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient} from \"@angular/common/http\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthServiceService {\r\n  private authUrl = 'http://localhost:8080/login/auth';\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  isLoggedIn(): boolean {\r\n    return localStorage.getItem('authToken') !== null;\r\n  }\r\n\r\n  hasRoles(roles: Array<string>): boolean {\r\n    const tokenRoles: Array<string> = JSON.parse(localStorage.getItem('authToken')).role;\r\n    return roles.every(role => tokenRoles.indexOf(role) >= 0);\r\n  }\r\n\r\n  authenticate(username: string, password: string, success, fail) {\r\n    return this.http.post<any>(this.authUrl,\r\n      JSON.stringify({email: username, password: password}),\r\n      {\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        }\r\n      })\r\n      .toPromise()\r\n      .then((resp) => {\r\n        localStorage.setItem('authToken', JSON.stringify(resp));\r\n        success();\r\n        },\r\n        (err) => {\r\n        fail(err);\r\n      });\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  apiUrl: \"http://localhost:3000\",\r\n  managerNav: [\r\n    {\r\n      title: 'Reimbursements'\r\n    },\r\n    {\r\n      title: 'Employees'\r\n    },\r\n    {\r\n      title: 'New Employee'\r\n    }\r\n  ],\r\n  employeeNav: [\r\n    {\r\n      title: 'Reimbursements'\r\n    },\r\n    {\r\n      title: 'New Reimbursement'\r\n    },\r\n    {\r\n      title: 'Profile'\r\n    }\r\n  ]\r\n};\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":""}