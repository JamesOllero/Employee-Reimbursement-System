{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-router.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/main-menu/main-menu.component.css","webpack:///./src/app/main-menu/main-menu.component.html","webpack:///./src/app/main-menu/main-menu.component.ts","webpack:///./src/app/modules/employee/components/employee-profile/employee-profile.component.css","webpack:///./src/app/modules/employee/components/employee-profile/employee-profile.component.html","webpack:///./src/app/modules/employee/components/employee-profile/employee-profile.component.ts","webpack:///./src/app/modules/employee/employee.module.ts","webpack:///./src/app/modules/employee/employee.ts","webpack:///./src/app/modules/manager/components/employee-details/employee-details.component.css","webpack:///./src/app/modules/manager/components/employee-details/employee-details.component.html","webpack:///./src/app/modules/manager/components/employee-details/employee-details.component.ts","webpack:///./src/app/modules/manager/components/employees/employees.component.css","webpack:///./src/app/modules/manager/components/employees/employees.component.html","webpack:///./src/app/modules/manager/components/employees/employees.component.ts","webpack:///./src/app/modules/manager/components/new-employee/new-employee.component.css","webpack:///./src/app/modules/manager/components/new-employee/new-employee.component.html","webpack:///./src/app/modules/manager/components/new-employee/new-employee.component.ts","webpack:///./src/app/modules/manager/manager.module.ts","webpack:///./src/app/modules/manager/services/manager-service.service.ts","webpack:///./src/app/modules/reimbursement/components/approve-reimbursement/approve-reimbursement.component.css","webpack:///./src/app/modules/reimbursement/components/approve-reimbursement/approve-reimbursement.component.html","webpack:///./src/app/modules/reimbursement/components/approve-reimbursement/approve-reimbursement.component.ts","webpack:///./src/app/modules/reimbursement/components/new-reimbursement/new-reimbursement.component.css","webpack:///./src/app/modules/reimbursement/components/new-reimbursement/new-reimbursement.component.html","webpack:///./src/app/modules/reimbursement/components/new-reimbursement/new-reimbursement.component.ts","webpack:///./src/app/modules/reimbursement/components/rebursements/rebursements.component.css","webpack:///./src/app/modules/reimbursement/components/rebursements/rebursements.component.html","webpack:///./src/app/modules/reimbursement/components/rebursements/rebursements.component.ts","webpack:///./src/app/modules/reimbursement/components/reimbursement-detail/reimbursement-detail.component.css","webpack:///./src/app/modules/reimbursement/components/reimbursement-detail/reimbursement-detail.component.html","webpack:///./src/app/modules/reimbursement/components/reimbursement-detail/reimbursement-detail.component.ts","webpack:///./src/app/modules/reimbursement/reimbursement.module.ts","webpack:///./src/app/modules/reimbursement/reimbursement.ts","webpack:///./src/app/modules/reimbursement/services/reimbursement-service.service.ts","webpack:///./src/app/navigation/navigation.component.css","webpack:///./src/app/navigation/navigation.component.html","webpack:///./src/app/navigation/navigation.component.ts","webpack:///./src/app/services/auth-guard-service.service.ts","webpack:///./src/app/services/auth-service.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from \"@angular/router\";\r\nimport { LoginComponent} from \"./login/login.component\";\r\nimport { AuthGuardServiceService } from \"./services/auth-guard-service.service\";\r\nimport {MainMenuComponent} from \"./main-menu/main-menu.component\";\r\nimport {EmployeeDetailsComponent} from \"./modules/manager/components/employee-details/employee-details.component\";\r\nimport {EmployeeProfileComponent} from \"./modules/employee/components/employee-profile/employee-profile.component\";\r\nimport {NewReimbursementComponent} from \"./modules/reimbursement/components/new-reimbursement/new-reimbursement.component\";\r\nimport { RebursementsComponent } from './modules/reimbursement/components/rebursements/rebursements.component';\r\nimport {NewEmployeeComponent} from \"./modules/manager/components/new-employee/new-employee.component\";\r\nimport {ReimbursementDetailComponent} from \"./modules/reimbursement/components/reimbursement-detail/reimbursement-detail.component\";\r\nimport {ApproveReimbursementComponent} from \"./modules/reimbursement/components/approve-reimbursement/approve-reimbursement.component\";\r\nimport {EmployeesComponent} from \"./modules/manager/components/employees/employees.component\";\r\nconst routes: Routes = [\r\n  {\r\n    path: 'main',\r\n    component: MainMenuComponent,\r\n    canActivate: [AuthGuardServiceService],\r\n    children: [\r\n      {\r\n        path: 'manager',\r\n        children: [\r\n          {\r\n            path: 'reimbursements',\r\n            component: RebursementsComponent\r\n          },\r\n          {\r\n            path: 'reimbursements/details/:id',\r\n            component: ReimbursementDetailComponent\r\n          },\r\n          {\r\n            path: 'employees',\r\n            component: EmployeesComponent\r\n          },\r\n          {\r\n            path: 'employees/details/:id',\r\n            component: EmployeeDetailsComponent\r\n          },\r\n          {\r\n            path: 'create-employee',\r\n            component: NewEmployeeComponent\r\n          },\r\n          {\r\n            path: '',\r\n            redirectTo: 'reimbursements',\r\n            pathMatch: 'full'\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        path: 'employee',\r\n        children: [\r\n          {\r\n            path: 'profile',\r\n            component: EmployeeProfileComponent\r\n          },\r\n          {\r\n            path: 'reimbursements',\r\n            component: RebursementsComponent\r\n          },\r\n          {\r\n            path: 'reimbursements/details/:id',\r\n            component: ReimbursementDetailComponent\r\n          },\r\n          {\r\n            path: 'create-reimbursement',\r\n            component: NewReimbursementComponent\r\n          },\r\n          {\r\n            path: '',\r\n            redirectTo: 'profile',\r\n            pathMatch: 'full'\r\n          }\r\n        ]\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    path: 'logout',\r\n    redirectTo: '',\r\n    pathMatch: 'full'\r\n  },\r\n  {\r\n    path: 'login',\r\n    component: LoginComponent\r\n  },\r\n  {\r\n    path: '**',\r\n    redirectTo: 'main'\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  declarations: [],\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRouterModule { }\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<router-outlet></router-outlet>\\r\\n\"","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'ers-client';\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { HttpClientModule } from \"@angular/common/http\";\r\nimport { AppComponent } from './app.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { AppRouterModule } from './app-router.module';\r\nimport { FormsModule } from \"@angular/forms\";\r\nimport { MainMenuComponent } from './main-menu/main-menu.component';\r\nimport { NavigationComponent } from './navigation/navigation.component';\r\nimport { EmployeeModule} from \"./modules/employee/employee.module\";\r\nimport {ReimbursementModule} from \"./modules/reimbursement/reimbursement.module\";\r\nimport {ManagerModule} from \"./modules/manager/manager.module\";\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    LoginComponent,\r\n    MainMenuComponent,\r\n    NavigationComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRouterModule,\r\n    HttpClientModule,\r\n    FormsModule,\r\n    EmployeeModule,\r\n    ReimbursementModule,\r\n    ManagerModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","module.exports = \".form-container {\\r\\n  margin: 0 auto;\\r\\n  width: 100%;\\r\\n  text-align: center;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbG9naW4vbG9naW4uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGNBQWM7RUFDZCxXQUFXO0VBQ1gsa0JBQWtCO0FBQ3BCIiwiZmlsZSI6InNyYy9hcHAvbG9naW4vbG9naW4uY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5mb3JtLWNvbnRhaW5lciB7XHJcbiAgbWFyZ2luOiAwIGF1dG87XHJcbiAgd2lkdGg6IDEwMCU7XHJcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG59XHJcbiJdfQ== */\"","module.exports = \"<div class=\\\"form-container\\\">\\r\\n  <form #loginForm=\\\"ngForm\\\" novalidate (ngSubmit)=\\\"loginSubmit()\\\">\\r\\n    <div>\\r\\n      <input\\r\\n        type=\\\"text\\\"\\r\\n        name=\\\"username\\\"\\r\\n        placeholder=\\\"email\\\"\\r\\n        [(ngModel)]=\\\"username\\\"\\r\\n        required/>\\r\\n    </div>\\r\\n    <div>\\r\\n      <input\\r\\n        type=\\\"password\\\"\\r\\n        name=\\\"password\\\"\\r\\n        placeholder=\\\"password\\\"\\r\\n        [(ngModel)]=\\\"password\\\"\\r\\n        required/>\\r\\n    </div>\\r\\n    <div>\\r\\n      <button type=\\\"submit\\\" [disabled]=\\\"!loginForm.valid\\\">Login</button>\\r\\n    </div>\\r\\n  </form>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { AuthServiceService} from \"../services/auth-service.service\";\r\nimport { Router, ActivatedRoute} from \"@angular/router\";\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  username: string;\r\n  password: string;\r\n  returnUrl: string;\r\n\r\n  constructor(\r\n    private authService: AuthServiceService,\r\n    private router: Router,\r\n    private route: ActivatedRoute\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.returnUrl = this.route.snapshot.queryParams['returnUrl'] || '/';\r\n  }\r\n\r\n  loginSubmit() {\r\n    this.authService.authenticate(this.username, this.password,\r\n      () => this.router.navigate([this.returnUrl]),\r\n      (err) => {\r\n      console.log(err);\r\n      });\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21haW4tbWVudS9tYWluLW1lbnUuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div class=\\\"navs\\\">\\r\\n  <span>\\r\\n    <app-navigation [navItems]=\\\"userNavs\\\"></app-navigation>\\r\\n  </span>\\r\\n</div>\\r\\n<router-outlet></router-outlet>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { AuthServiceService} from \"../services/auth-service.service\";\r\nimport { environment } from \"../../environments/environment\";\r\nimport { Router} from \"@angular/router\";\r\n\r\n@Component({\r\n  selector: 'app-main-menu',\r\n  templateUrl: './main-menu.component.html',\r\n  styleUrls: ['./main-menu.component.css']\r\n})\r\nexport class MainMenuComponent implements OnInit {\r\n  userNavs: Array<{title: string, link: string}>;\r\n\r\n  constructor(\r\n    private authService: AuthServiceService,\r\n    private router: Router) { }\r\n\r\n  ngOnInit() {\r\n    if(this.authService.hasRoles(['Manager'])) {\r\n      this.userNavs = environment.managerNav;\r\n      this.router.navigate(['main/manager/reimbursements']);\r\n    } else {\r\n      this.userNavs = environment.employeeNav;\r\n      this.router.navigate(['main/employee/profile']);\r\n    }\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvZW1wbG95ZWUvY29tcG9uZW50cy9lbXBsb3llZS1wcm9maWxlL2VtcGxveWVlLXByb2ZpbGUuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div class=\\\"profile\\\">\\r\\n<h2>{{employee.firstName | uppercase}} {{employee.lastName | uppercase}} Details</h2>\\r\\n<div><span>id: </span>{{employee.id}}</div>\\r\\n<div><span>username: </span>{{employee.username}}</div>\\r\\n<div><span>First Name: </span>{{employee.firstName}}</div>\\r\\n<div><span>Last Name: </span>{{employee.lastName}}</div>\\r\\n<div><span>email: </span>{{employee.email}}</div>\\r\\n<div><span>role: </span>{{employee.role}}</div>\\r\\n</div>\\r\\n<br>\\r\\n<div>\\r\\n<span>Recent Reimbursements</span>\\r\\n  <table>\\r\\n    <tr>\\r\\n      <th>Id</th><th>Description</th><th>Amount</th><th>Status</th>\\r\\n    </tr>\\r\\n    <tr *ngFor=\\\"let reimbursement of recentReimbursements\\\">\\r\\n      <td>{{reimbursement.id}}</td><td>{{reimbursement.description}}</td><td>{{reimbursement.amount}}</td><td>{{reimbursement.status}}</td>\\r\\n    </tr>\\r\\n  </table>\\r\\n</div>\\r\\n\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { Employee } from '../../employee';\r\nimport {ReimbursementServiceService} from \"../../../reimbursement/services/reimbursement-service.service\";\r\nimport { Reimbursement} from \"../../../reimbursement/reimbursement\";\r\nimport {forEach} from \"@angular/router/src/utils/collection\";\r\nimport {AuthServiceService} from \"../../../../services/auth-service.service\";\r\nimport {Location} from \"@angular/common\";\r\n\r\n@Component({\r\n  selector: 'app-employee-profile',\r\n  templateUrl: './employee-profile.component.html',\r\n  styleUrls: ['./employee-profile.component.css']\r\n})\r\nexport class EmployeeProfileComponent implements OnInit {\r\n  employee: Employee = JSON.parse(localStorage.getItem('authToken'));\r\n  public recentReimbursements: Reimbursement[];\r\n\r\n  constructor(\r\n    private reimbursementService: ReimbursementServiceService,\r\n    private authService: AuthServiceService,\r\n    private location: Location\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.getRecentReimbursements();\r\n  }\r\n\r\n  getRecentReimbursements() {\r\n    this.reimbursementService.getRecentReimbursements(this.employee.id,\r\n      () => {\r\n        let reimbArr = JSON.parse(localStorage.getItem('reimbursements'));\r\n        this.recentReimbursements = reimbArr;\r\n      },\r\n      (err) => {\r\n      console.log(err);\r\n      });\r\n\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { EmployeeProfileComponent } from './components/employee-profile/employee-profile.component';\r\n\r\n@NgModule({\r\n  declarations: [EmployeeProfileComponent],\r\n  imports: [\r\n    CommonModule\r\n  ],\r\n  exports: [\r\n    EmployeeProfileComponent\r\n  ]\r\n})\r\nexport class EmployeeModule { }\r\n","export class Employee {\r\n  id: number;\r\n  username: string;\r\n  password: string;\r\n  firstName: string;\r\n  lastName: string;\r\n  email: string;\r\n  role: string;\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvbWFuYWdlci9jb21wb25lbnRzL2VtcGxveWVlLWRldGFpbHMvZW1wbG95ZWUtZGV0YWlscy5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div class=\\\"profile\\\">\\r\\n  <h2>{{employee.firstName | uppercase}} {{employee.lastName | uppercase}} Details</h2>\\r\\n  <div><span>id: </span>{{employee.id}}</div>\\r\\n  <div><span>username: </span>{{employee.username}}</div>\\r\\n  <div><span>First Name: </span>{{employee.firstName}}</div>\\r\\n  <div><span>Last Name: </span>{{employee.lastName}}</div>\\r\\n  <div><span>email: </span>{{employee.email}}</div>\\r\\n  <div><span>role: </span>{{employee.role}}</div>\\r\\n</div>\\r\\n<br>\\r\\n<div *ngIf=\\\"checkedEmployeeIsManager()\\\">\\r\\n  <span>Employee Reimbursements</span>\\r\\n  <table>\\r\\n    <tr>\\r\\n      <th>Id</th><th>Description</th><th>Amount</th><th>Status</th>\\r\\n    </tr>\\r\\n    <tr *ngFor=\\\"let reimbursement of employeeReimbursements\\\">\\r\\n      <td>{{reimbursement.id}}</td><td>{{reimbursement.description}}</td><td>{{reimbursement.amount}}</td><td>{{reimbursement.status}}</td>\\r\\n    </tr>\\r\\n  </table>\\r\\n</div>\\r\\n<br>\\r\\n<br>\\r\\n<button (click)=\\\"goBack()\\\">Go Back</button>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport {Employee} from \"../../../employee/employee\";\r\nimport {ManagerServiceService} from \"../../services/manager-service.service\";\r\nimport {Location} from \"@angular/common\";\r\nimport {Reimbursement} from \"../../../reimbursement/reimbursement\";\r\nimport {ReimbursementServiceService} from \"../../../reimbursement/services/reimbursement-service.service\";\r\n\r\n@Component({\r\n  selector: 'app-employee-details',\r\n  templateUrl: './employee-details.component.html',\r\n  styleUrls: ['./employee-details.component.css']\r\n})\r\nexport class EmployeeDetailsComponent implements OnInit {\r\n  employee: Employee = JSON.parse(localStorage.getItem('employee'));\r\n  employeeReimbursements: Array<Reimbursement>;\r\n\r\n  constructor(\r\n    private managerService: ManagerServiceService,\r\n    private reimbursementService: ReimbursementServiceService,\r\n    private location: Location\r\n  ) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getEmployeeDetails();\r\n  }\r\n\r\n  getEmployeeDetails() {\r\n    this.reimbursementService.getUserReimbursements(this.employee.id,\r\n      () => {\r\n        let reimbArr = JSON.parse(localStorage.getItem('reimbursements'));\r\n        this.employeeReimbursements = reimbArr;\r\n      },\r\n      (err) => {\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n  goBack() {\r\n    this.location.back();\r\n  }\r\n}\r\n\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvbWFuYWdlci9jb21wb25lbnRzL2VtcGxveWVlcy9lbXBsb3llZXMuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div>\\r\\n  <table>\\r\\n    <tr>\\r\\n      <th>Id</th><th>Name</th><th>Email</th><th>To Details</th>\\r\\n    </tr>\\r\\n    <tr *ngFor=\\\"let employee of employees\\\">\\r\\n      <td>{{employee.id}}</td>\\r\\n      <td>{{employee.firstName}} {{employee.lastName}}</td>\\r\\n      <td>{{employee.email}}</td>\\r\\n      <td><button (click)=\\\"loadDetails(employee.id)\\\">To Details</button></td>\\r\\n    </tr>\\r\\n  </table>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport {ManagerServiceService} from \"../../services/manager-service.service\";\r\nimport {Employee} from \"../../../employee/employee\";\r\nimport {Router} from \"@angular/router\";\r\n\r\n@Component({\r\n  selector: 'app-employees',\r\n  templateUrl: './employees.component.html',\r\n  styleUrls: ['./employees.component.css']\r\n})\r\nexport class EmployeesComponent implements OnInit {\r\n  employees: Employee[];\r\n  constructor(\r\n    private managerService: ManagerServiceService,\r\n    private router: Router\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.getAllEmployees();\r\n  }\r\n  getAllEmployees() {\r\n    this.managerService.getEmployees(\r\n      () => {\r\n        let empArr = JSON.parse(localStorage.getItem('employees'));\r\n        this.employees = empArr;\r\n        return;\r\n      },\r\n      (err) => {\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n  loadDetails(id: number) {\r\n    this.managerService.getEmployee(id,\r\n      () => this.router.navigateByUrl('/main/manager/employees/details/'+id.toString()),\r\n      (err) => {\r\n      console.log(err);\r\n      });\r\n  }\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvbWFuYWdlci9jb21wb25lbnRzL25ldy1lbXBsb3llZS9uZXctZW1wbG95ZWUuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div>\\r\\n  <h3>New Employee</h3>\\r\\n  <form (ngSubmit)=\\\"onSubmit()\\\" #employeeForm=\\\"ngForm\\\">\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label for=\\\"firstName\\\">First Name: </label>\\r\\n      <input type=\\\"text\\\" id=\\\"firstName\\\" [(ngModel)]=\\\"newEmployee.firstName\\\" name=\\\"firstName\\\" required=\\\"true\\\">\\r\\n    </div>\\r\\n    <div>\\r\\n      <label for=\\\"lastName\\\">Last Name: </label>\\r\\n      <input type=\\\"text\\\" id=\\\"lastName\\\" [(ngModel)]=\\\"newEmployee.lastName\\\" name=\\\"lastName\\\" required=\\\"true\\\">\\r\\n    </div>\\r\\n    <div>\\r\\n      <label for=\\\"username\\\">Username: </label>\\r\\n      <input type=\\\"text\\\" id=\\\"username\\\" [(ngModel)]=\\\"newEmployee.username\\\" name=\\\"username\\\" required=\\\"true\\\">\\r\\n    </div>\\r\\n    <div>\\r\\n      <label for=\\\"password\\\">Password: </label>\\r\\n      <input type=\\\"password\\\" id=\\\"password\\\" [(ngModel)]=\\\"newEmployee.password\\\" name=\\\"password\\\" required=\\\"true\\\">\\r\\n    </div>\\r\\n    <div>\\r\\n      <label for=\\\"email\\\">Email: </label>\\r\\n      <input type=\\\"text\\\" id=\\\"email\\\" [(ngModel)]=\\\"newEmployee.email\\\" name=\\\"email\\\" required=\\\"true\\\">\\r\\n    </div>\\r\\n    <div>\\r\\n      <label for=\\\"role\\\">Role: </label>\\r\\n      <select id=\\\"role\\\" [(ngModel)]=\\\"newEmployee.role\\\" name=\\\"role\\\" required=\\\"true\\\">\\r\\n        <option value=\\\"Employee\\\">Employee</option>\\r\\n        <option value=\\\"Manager\\\">Manager</option>\\r\\n      </select>\\r\\n    </div>\\r\\n    <button type=\\\"submit\\\" [disabled]=\\\"!employeeForm.form.valid\\\">Submit</button>\\r\\n    <button type=\\\"reset\\\">Reset Form</button>\\r\\n  </form>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport {Employee} from \"../../../employee/employee\";\r\nimport {ManagerServiceService} from \"../../services/manager-service.service\";\r\nimport {Router} from \"@angular/router\";\r\n\r\n@Component({\r\n  selector: 'app-new-employee',\r\n  templateUrl: './new-employee.component.html',\r\n  styleUrls: ['./new-employee.component.css']\r\n})\r\nexport class NewEmployeeComponent implements OnInit {\r\n  newEmployee= new Employee;\r\n  constructor(\r\n    private managerService: ManagerServiceService,\r\n    private router: Router\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.newEmployee.id = 0;\r\n    this.newEmployee.firstName = '';\r\n    this.newEmployee.lastName = '';\r\n    this.newEmployee.username = '';\r\n    this.newEmployee.email = '';\r\n    this.newEmployee.password = '';\r\n    this.newEmployee.role = 'Employee';\r\n  }\r\n\r\n  onSubmit() {\r\n    this.managerService.createEmployee(this.newEmployee,\r\n      () => {\r\n    this.router.navigateByUrl('main/manager/employees');\r\n  },\r\n      (err) => {\r\n      console.log(err);\r\n      });\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { EmployeesComponent } from './components/employees/employees.component';\r\nimport { EmployeeDetailsComponent } from './components/employee-details/employee-details.component';\r\nimport { NewEmployeeComponent } from './components/new-employee/new-employee.component';\r\nimport {RouterModule} from \"@angular/router\";\r\nimport {FormsModule} from \"@angular/forms\";\r\n\r\n@NgModule({\r\n  declarations: [EmployeesComponent, EmployeeDetailsComponent, NewEmployeeComponent],\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule,\r\n    FormsModule\r\n  ],\r\n  exports: [\r\n    EmployeeDetailsComponent, EmployeesComponent, NewEmployeeComponent\r\n  ]\r\n})\r\nexport class ManagerModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport {HttpClient, HttpParams} from \"@angular/common/http\";\r\nimport {Employee} from \"../../employee/employee\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ManagerServiceService {\r\n  private employeeUrl = 'http://localhost:8080/user';\r\n\r\n  constructor(\r\n    private http: HttpClient\r\n  ) {\r\n  }\r\n\r\n  getEmployees(success, fail) {\r\n    return this.http.get<Array<Employee>>(this.employeeUrl).toPromise()\r\n      .then((resp) => {\r\n          localStorage.setItem('employees', JSON.stringify(resp));\r\n          console.log('Got all employees');\r\n          success();\r\n        },\r\n        (err) => {\r\n          fail(err);\r\n        });\r\n  }\r\n\r\n  getEmployee(employeeId: number, success, fail) {\r\n    let params = new HttpParams().set('employeeId', employeeId.toString());\r\n    return this.http.get<Employee>(this.employeeUrl, {params}).toPromise()\r\n      .then((resp) => {\r\n          localStorage.setItem('employee', JSON.stringify(resp));\r\n          success();\r\n        },\r\n        (err) => {\r\n          fail(err);\r\n        });\r\n  }\r\n\r\n  createEmployee(employee: Employee, success, fail) {\r\n    return this.http.post(this.employeeUrl, JSON.stringify(employee)).toPromise()\r\n      .then((resp)=>{\r\n        success();\r\n      },\r\n        (err)=>{\r\n        fail(err);\r\n        });\r\n  }\r\n}\r\n\r\n\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvcmVpbWJ1cnNlbWVudC9jb21wb25lbnRzL2FwcHJvdmUtcmVpbWJ1cnNlbWVudC9hcHByb3ZlLXJlaW1idXJzZW1lbnQuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<p>\\r\\n  approve-reimbursement works!\\r\\n</p>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-approve-reimbursement',\r\n  templateUrl: './approve-reimbursement.component.html',\r\n  styleUrls: ['./approve-reimbursement.component.css']\r\n})\r\nexport class ApproveReimbursementComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvcmVpbWJ1cnNlbWVudC9jb21wb25lbnRzL25ldy1yZWltYnVyc2VtZW50L25ldy1yZWltYnVyc2VtZW50LmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div>\\r\\n  <h3>New Reimbursement</h3>\\r\\n  <form (ngSubmit)=\\\"onSubmit()\\\" #reimbursementForm=\\\"ngForm\\\">\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <span><label for=\\\"description\\\">Description: </label></span>\\r\\n      <input type=\\\"text\\\" id=\\\"description\\\" required [(ngModel)]=\\\"newReimbursement.description\\\" name=\\\"description\\\">\\r\\n    </div>\\r\\n    <div>\\r\\n      <span><label for=\\\"amount\\\">Amount: </label></span>\\r\\n      <input type=\\\"number\\\" id=\\\"amount\\\" required [(ngModel)]=\\\"newReimbursement.amount\\\" name=\\\"amount\\\">\\r\\n    </div>\\r\\n    <div>\\r\\n      <span><label for=\\\"type\\\">Type: </label></span>\\r\\n      <select id=\\\"type\\\" [(ngModel)]=\\\"newReimbursement.type\\\" name=\\\"type\\\">\\r\\n        <option value=\\\"Travel\\\">Travel</option>\\r\\n        <option value=\\\"Lodging\\\">Lodging</option>\\r\\n        <option value=\\\"Food\\\">Food</option>\\r\\n        <option value=\\\"Other\\\">Other</option>\\r\\n      </select>\\r\\n    </div>\\r\\n    <button type=\\\"submit\\\" [disabled]=\\\"!reimbursementForm.form.valid\\\">Submit</button>\\r\\n    <button type=\\\"reset\\\">Reset Form</button>\\r\\n  </form>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport {Reimbursement} from \"../../reimbursement\";\r\nimport {Employee} from \"../../../employee/employee\";\r\nimport {ReimbursementServiceService} from \"../../services/reimbursement-service.service\";\r\nimport {Router} from \"@angular/router\";\r\n\r\n@Component({\r\n  selector: 'app-new-reimbursement',\r\n  templateUrl: './new-reimbursement.component.html',\r\n  styleUrls: ['./new-reimbursement.component.css']\r\n})\r\nexport class NewReimbursementComponent implements OnInit {\r\n  newReimbursement = new Reimbursement;\r\n  constructor(\r\n    private reimbursementService: ReimbursementServiceService,\r\n    private router: Router) { }\r\n\r\n  ngOnInit() {\r\n    let employee: Employee;\r\n    employee = JSON.parse(localStorage.getItem('authToken'));\r\n    this.newReimbursement.authorId = employee.id;\r\n    this.newReimbursement.id = 0;\r\n    this.newReimbursement.description = '';\r\n    this.newReimbursement.type = '';\r\n    this.newReimbursement.amount;\r\n  }\r\n\r\n  onSubmit() {\r\n\r\n    this.reimbursementService.createReimbursement(this.newReimbursement,\r\n      () => {\r\n        this.router.navigateByUrl('main/employee/profile');\r\n      },\r\n      (err) => {\r\n      console.log(err);\r\n      });\r\n  }\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvcmVpbWJ1cnNlbWVudC9jb21wb25lbnRzL3JlYnVyc2VtZW50cy9yZWJ1cnNlbWVudHMuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div>\\r\\n  <table>\\r\\n    <tr>\\r\\n      <th>Id</th><th>Author</th><th>Description</th><th>Amount</th><th>Status</th><th>Type</th><th>Resolver</th><th>To Details</th>\\r\\n    </tr>\\r\\n    <tr *ngFor=\\\"let reimbursement of reimbursementsPile\\\">\\r\\n      <td>{{reimbursement.id}}</td>\\r\\n      <td>{{reimbursement.authorName}}</td>\\r\\n      <td>{{reimbursement.description}}</td>\\r\\n      <td>${{reimbursement.amount}}</td>\\r\\n      <td>{{reimbursement.status}}</td>\\r\\n      <td>{{reimbursement.type}}</td>\\r\\n      <td>{{reimbursement.resolverName}}</td>\\r\\n      <td><button (click)=\\\"loadDetails(reimbursement.id)\\\">To Details</button></td>\\r\\n    </tr>\\r\\n  </table>\\r\\n</div>\\r\\n\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport {Reimbursement} from \"../../reimbursement\";\r\nimport {ReimbursementServiceService} from \"../../services/reimbursement-service.service\";\r\nimport {Employee} from \"../../../employee/employee\";\r\nimport {AuthServiceService} from \"../../../../services/auth-service.service\";\r\nimport {ActivatedRoute, Router} from \"@angular/router\";\r\nimport {ReimbursementDetailComponent} from \"../reimbursement-detail/reimbursement-detail.component\";\r\n\r\n@Component({\r\n  selector: 'app-rebursements',\r\n  templateUrl: './rebursements.component.html',\r\n  styleUrls: ['./rebursements.component.css']\r\n})\r\nexport class RebursementsComponent implements OnInit {\r\n  public reimbursementsPile: Array<Reimbursement>;\r\n  employee: Employee;\r\n  managerState: boolean;\r\n\r\n  constructor(private authService: AuthServiceService,\r\n              private reimbursementService: ReimbursementServiceService,\r\n              private router: Router,\r\n              private route: ActivatedRoute) {\r\n  }\r\n  detailsUrl: string;\r\n  ngOnInit() {\r\n    this.getReimbursements();\r\n    this.managerState = this.authService.hasRoles(['Manager']);\r\n  }\r\n\r\n  getReimbursements() {\r\n    if(this.authService.hasRoles(['Manager'])) {\r\n      this.getAllReimbursements();\r\n      return;\r\n    } else {\r\n      this.getUserReimbursements();\r\n      return;\r\n    }\r\n  }\r\n\r\n  getAllReimbursements() {\r\n    this.reimbursementService.getReimbursements(\r\n      () => {let reimbArr = JSON.parse(localStorage.getItem('reimbursements'));\r\n\r\n      this.reimbursementsPile = reimbArr;\r\n      return;\r\n      },\r\n      (err) => {\r\n        console.log(err);\r\n      }\r\n    );\r\n  }\r\n\r\n  getUserReimbursements() {\r\n    let employee = JSON.parse(localStorage.getItem('authToken'));\r\n    this.reimbursementService.getUserReimbursements(employee.id,\r\n      () => {let reimbArr = JSON.parse(localStorage.getItem('reimbursements'));\r\n        let i:number;\r\n        for(i=0;i<reimbArr.length;i++) {\r\n          reimbArr[i].submissionDate = new Date(reimbArr[i].submitted);\r\n        }\r\n        this.reimbursementsPile = reimbArr;\r\n        },\r\n      (err) => {\r\n      console.log(err);\r\n      });\r\n  }\r\n\r\n  loadDetails(id: number) {\r\n    if(this.authService.hasRoles(['Manager'])){\r\n      this.reimbursementService.getReimbursement(id,\r\n        () => this.router.navigateByUrl('/main/manager/reimbursements/details/'+id.toString()),\r\n        (err) => {\r\n        console.log(err);\r\n        });\r\n    } else {\r\n      this.reimbursementService.getReimbursement(id,\r\n        () => this.router.navigateByUrl('/main/employee/reimbursements/details/'+id.toString()),\r\n        (err) => {\r\n        console.log(err);\r\n        });\r\n    }\r\n  }\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvcmVpbWJ1cnNlbWVudC9jb21wb25lbnRzL3JlaW1idXJzZW1lbnQtZGV0YWlsL3JlaW1idXJzZW1lbnQtZGV0YWlsLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div *ngIf=\\\"!editing\\\">\\r\\n<table>\\r\\n  <tr>\\r\\n    <th>Id</th><th>Author</th><th>Description</th><th>Amount</th><th>Status</th><th>Type</th><th>Resolver</th>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>{{reimbursement.id}}</td>\\r\\n    <td>{{reimbursement.authorName}}</td>\\r\\n    <td>{{reimbursement.description}}</td>\\r\\n    <td>{{reimbursement.amount}}</td>\\r\\n    <td>{{reimbursement.status}}</td>\\r\\n    <td>{{reimbursement.type}}</td>\\r\\n    <td>{{reimbursement.resolverName}}</td>\\r\\n  </tr>\\r\\n</table>\\r\\n<button *ngIf=\\\"isManager()\\\" (click)=\\\"startEdit()\\\">Update Reimbursement</button>\\r\\n<br>\\r\\n</div>\\r\\n<div *ngIf=\\\"editing\\\">\\r\\n  <form (ngSubmit)=\\\"onSubmit()\\\" #approvalForm=\\\"ngForm\\\">\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label>{{reimbursement.id}}</label><br>\\r\\n      <label>{{reimbursement.authorName}}</label><br>\\r\\n      <label>{{reimbursement.description}}</label><br>\\r\\n      <label>${{reimbursement.amount}}</label><br>\\r\\n      <label>{{reimbursement.type}}</label>\\r\\n    </div>\\r\\n    <div>\\r\\n      <label for=\\\"newStatus\\\">New Status:</label>\\r\\n      <select id=\\\"newStatus\\\" [(ngModel)]=\\\"reimbursement.status\\\" name=\\\"status\\\">\\r\\n        <option value=\\\"approved\\\">Approved</option>\\r\\n        <option value=\\\"denied\\\">Denied</option>\\r\\n      </select>\\r\\n    </div>\\r\\n    <button type=\\\"submit\\\" [disabled]=\\\"isActiveUser()\\\">Submit</button>\\r\\n  </form>\\r\\n</div>\\r\\n<br>\\r\\n<button (click)=\\\"goBack()\\\">Return</button>\\r\\n\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport {ActivatedRoute} from \"@angular/router\";\r\nimport {ReimbursementServiceService} from \"../../services/reimbursement-service.service\";\r\nimport {Reimbursement} from \"../../reimbursement\";\r\nimport {Location} from \"@angular/common\";\r\nimport {HttpClient} from \"@angular/common/http\";\r\nimport {AuthServiceService} from \"../../../../services/auth-service.service\";\r\nimport {Employee} from \"../../../employee/employee\";\r\n\r\n\r\n@Component({\r\n  selector: 'app-reimbursement-detail',\r\n  templateUrl: './reimbursement-detail.component.html',\r\n  styleUrls: ['./reimbursement-detail.component.css']\r\n})\r\nexport class ReimbursementDetailComponent implements OnInit {\r\n  reimbursement: Reimbursement;\r\n  editing: boolean = false;\r\n\r\n  private reimbursementUrl = 'http://localhost:8080/ticket';\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private reimbursementService: ReimbursementServiceService,\r\n    private location: Location,\r\n    private http: HttpClient,\r\n    private authService: AuthServiceService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getReimbursement();\r\n  }\r\n\r\n  getReimbursement(): void {\r\n    this.reimbursement = JSON.parse(localStorage.getItem('reimbursement'));\r\n  }\r\n\r\n  goBack(): void {\r\n    this.location.back();\r\n  }\r\n\r\n  startEdit(): void {\r\n    this.editing = true;\r\n  }\r\n\r\n  onSubmit() {\r\n    let employee: Employee;\r\n    employee = JSON.parse(localStorage.getItem('authToken'));\r\n    this.reimbursement.resolverId = employee.id;\r\n    this.reimbursementService.updateReimbursement(this.reimbursement,\r\n      () => {\r\n      this.editing = false;\r\n      this.goBack();\r\n      },\r\n      (err) => {\r\n      console.log(err);\r\n      this.goBack();\r\n      });\r\n  }\r\n\r\n  isManager() {\r\n    return this.authService.hasRoles(['Manager']);\r\n  }\r\n\r\n  isActiveUser() {\r\n    let employee: Employee;\r\n    employee = JSON.parse(localStorage.getItem('authToken'));\r\n    if(this.reimbursement.authorId===employee.id) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RebursementsComponent } from './components/rebursements/rebursements.component';\r\nimport { ReimbursementDetailComponent } from './components/reimbursement-detail/reimbursement-detail.component';\r\nimport { NewReimbursementComponent } from './components/new-reimbursement/new-reimbursement.component';\r\nimport { ApproveReimbursementComponent } from './components/approve-reimbursement/approve-reimbursement.component';\r\nimport {RouterModule} from \"@angular/router\";\r\nimport {FormsModule} from \"@angular/forms\";\r\n\r\n@NgModule({\r\n  declarations: [RebursementsComponent, ReimbursementDetailComponent, NewReimbursementComponent, ApproveReimbursementComponent],\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule,\r\n    FormsModule\r\n  ],\r\n  exports: [\r\n    RebursementsComponent, ReimbursementDetailComponent, NewReimbursementComponent, ApproveReimbursementComponent\r\n  ]\r\n})\r\nexport class ReimbursementModule { }\r\n","export class Reimbursement {\r\n  id: number;\r\n  amount: number;\r\n  description: string;\r\n  filename: string;\r\n  reciept: null;\r\n  authorId: number;\r\n  authorName: string;\r\n  authorFirstName: string;\r\n  authorLastName: string;\r\n  resolverId: number;\r\n  resolverName: string;\r\n  resolverFirstName: string;\r\n  resolverLastName: string;\r\n  status: string;\r\n  type: string;\r\n  submitted: Date;\r\n  resolved: Date;\r\n}\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport { Reimbursement } from '../reimbursement';\r\nimport {HttpClient, HttpParams} from '@angular/common/http'\r\nimport {Observable} from \"rxjs\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ReimbursementServiceService {\r\n  private reimbursementUrl = 'http://localhost:8080/ticket';\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  getUserReimbursements(userId: number, success, fail) {\r\n    let params = new HttpParams().set('userId', userId.toString());\r\n    return this.http.get<Array<Reimbursement>>(this.reimbursementUrl, {params}).toPromise()\r\n      .then((resp) => {\r\n        localStorage.setItem('reimbursements', JSON.stringify(resp));\r\n        console.log('Got user reimbursements');\r\n        success();\r\n      },\r\n        (err) => {\r\n        fail(err);\r\n        });\r\n  }\r\n\r\n  getReimbursements(success, fail) {\r\n    return this.http.get<Array<Reimbursement>>(this.reimbursementUrl).toPromise()\r\n      .then((resp) => {\r\n        localStorage.setItem('reimbursements', JSON.stringify(resp));\r\n        console.log('Got all reimbursements');\r\n        success();\r\n      },\r\n        (err) => {\r\n        fail(err);\r\n        });\r\n  }\r\n\r\n  getRecentReimbursements(userId: number, success, fail) {\r\n    let params = new HttpParams().set('userId', userId.toString()).set('recent', 'true');\r\n    return this.http.get<Array<Reimbursement>>(this.reimbursementUrl, {params}).toPromise()\r\n      .then((resp) => {\r\n        localStorage.setItem('reimbursements', JSON.stringify(resp));\r\n        success();\r\n      },\r\n        (err) => {\r\n        fail(err);\r\n        });\r\n  }\r\n\r\n  getReimbursement(reimbursementId: number, success, fail) {\r\n    let params = new HttpParams().set('reimbursementId', reimbursementId.toString());\r\n    return this.http.get<Reimbursement>(this.reimbursementUrl, {params}).toPromise()\r\n      .then((resp) => {\r\n        localStorage.setItem('reimbursement', JSON.stringify(resp));\r\n        success();\r\n      },\r\n        (err) => {\r\n        fail(err);\r\n        });\r\n  }\r\n\r\n  updateReimbursement(reimbursement: Reimbursement, success, fail) {\r\n    return this.http.post(this.reimbursementUrl, JSON.stringify(reimbursement)).toPromise()\r\n      .then((resp) => {\r\n        success();\r\n      },\r\n        (err) => {\r\n        fail(err);\r\n        })\r\n  }\r\n\r\n  createReimbursement(reimbursement: Reimbursement, success, fail) {\r\n    return this.http.post(this.reimbursementUrl, JSON.stringify(reimbursement)).toPromise()\r\n      .then((resp)=>{\r\n        success();\r\n      },\r\n        (err) => {\r\n        fail(err);\r\n        });\r\n  }\r\n}\r\n","module.exports = \"ul {\\r\\n  list-style: none;\\r\\n  border-bottom: 1px solid #bbbb;\\r\\n  margin: 0;\\r\\n  padding: 0;\\r\\n}\\r\\n\\r\\nli {\\r\\n  display: inline-block;\\r\\n  margin-right: 20px;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbmF2aWdhdGlvbi9uYXZpZ2F0aW9uLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxnQkFBZ0I7RUFDaEIsOEJBQThCO0VBQzlCLFNBQVM7RUFDVCxVQUFVO0FBQ1o7O0FBRUE7RUFDRSxxQkFBcUI7RUFDckIsa0JBQWtCO0FBQ3BCIiwiZmlsZSI6InNyYy9hcHAvbmF2aWdhdGlvbi9uYXZpZ2F0aW9uLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJ1bCB7XHJcbiAgbGlzdC1zdHlsZTogbm9uZTtcclxuICBib3JkZXItYm90dG9tOiAxcHggc29saWQgI2JiYmI7XHJcbiAgbWFyZ2luOiAwO1xyXG4gIHBhZGRpbmc6IDA7XHJcbn1cclxuXHJcbmxpIHtcclxuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgbWFyZ2luLXJpZ2h0OiAyMHB4O1xyXG59XHJcbiJdfQ== */\"","module.exports = \"<nav>\\r\\n  <ul>\\r\\n    <li *ngFor=\\\"let item of navItems\\\">\\r\\n      <a [routerLink]=[item.link] class=\\\"nav-link\\\">{{item.title}}</a>\\r\\n    </li>\\r\\n    <button type=\\\"submit\\\" (click)=\\\"logout()\\\">Logout</button>\\r\\n  </ul>\\r\\n</nav>\\r\\n\"","import { Component, OnInit, Input } from '@angular/core';\r\nimport {AuthServiceService} from \"../services/auth-service.service\";\r\nimport {ActivatedRoute, Router} from \"@angular/router\";\r\n\r\n@Component({\r\n  selector: 'app-navigation',\r\n  templateUrl: './navigation.component.html',\r\n  styleUrls: ['./navigation.component.css']\r\n})\r\nexport class NavigationComponent implements OnInit {\r\n  @Input() navItems: Array<{title: string, link: string}>;\r\n  constructor(private authService: AuthServiceService,\r\n              private router: Router,\r\n              private route: ActivatedRoute) { }\r\n  returnUrl: string;\r\n  ngOnInit() {\r\n    this.returnUrl = this.route.snapshot.queryParams['returnUrl'] || 'logout';\r\n  }\r\n  logout() {\r\n    localStorage.clear();\r\n    this.router.navigate([this.returnUrl]);\r\n    window.location.reload();\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {CanActivate,ActivatedRouteSnapshot,Router,RouterStateSnapshot} from \"@angular/router\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthGuardServiceService implements CanActivate{\r\n\r\n  constructor(private router: Router) { }\r\n\r\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\r\n    if(localStorage.getItem('authToken')) {\r\n      return true;\r\n    }\r\n    this.router.navigate(['/login'], {queryParams: {returnUrl: state.url}});\r\n    return false;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient} from \"@angular/common/http\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthServiceService {\r\n  private authUrl = 'http://localhost:8080/login/auth';\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  isLoggedIn(): boolean {\r\n    return localStorage.getItem('authToken') !== null;\r\n  }\r\n\r\n  hasRoles(roles: Array<string>): boolean {\r\n    const tokenRoles: Array<string> = JSON.parse(localStorage.getItem('authToken')).role;\r\n    return roles.every(role => tokenRoles.indexOf(role) >= 0);\r\n  }\r\n\r\n  authenticate(username: string, password: string, success, fail) {\r\n    return this.http.post<any>(this.authUrl,\r\n      JSON.stringify({email: username, password: password}),\r\n      {\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        }\r\n      })\r\n      .toPromise()\r\n      .then((resp) => {\r\n          localStorage.setItem('authToken', JSON.stringify(resp));\r\n          success();\r\n        },\r\n        (err) => {\r\n          fail(err);\r\n        });\r\n  }\r\n}\r\n\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  apiUrl: \"http://localhost:3000\",\r\n  managerNav: [\r\n    {\r\n      title: 'Reimbursements',\r\n      link: 'manager/reimbursements'\r\n    },\r\n    {\r\n      title: 'Employees',\r\n      link: 'manager/employees'\r\n    },\r\n    {\r\n      title: 'New Employee',\r\n      link: 'manager/create-employee'\r\n    },\r\n    {\r\n      title: 'New Reimbursement',\r\n      link: 'employee/create-reimbursement'\r\n    },\r\n    {\r\n      title: 'Profile',\r\n      link: 'employee/profile'\r\n    }\r\n  ],\r\n  employeeNav: [\r\n    {\r\n      title: 'Reimbursements',\r\n      link: 'employee/reimbursements'\r\n    },\r\n    {\r\n      title: 'New Reimbursement',\r\n      link: 'employee/create-reimbursement'\r\n    },\r\n    {\r\n      title: 'Profile',\r\n      link: 'employee/profile'\r\n    }\r\n  ]\r\n};\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":""}